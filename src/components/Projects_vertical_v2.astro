---
import GitHub from "./icons/GH.astro"
import NextJS from "./icons/NJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Java from "./icons/Java.astro"
import { PROJECTS, TAGS } from './Projects.astro';
---
<style>
   
    .slider-card-v2 {
      flex: 0 0 100%; /* Cada tarjeta ocupa el 100% del ancho del contenedor */
      display: none; /* Inicialmente ocultamos todas las tarjetas */
    }
    .slider-card-v2.active {
      display: block; /* Mostramos solo las tarjetas activas */
    }
    .slider-wrapper-v2 {
      } /* Transici칩n suave */
    .pagination-v2 {
      display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 10px;
  }

  .control-button-v2 {
    background-color: gray;
    color: white;
    border: none;
    padding: 2px;
    border-radius: 50%;
    cursor: pointer;
    margin: 0 5px;
  }

  .control-button-v2:hover{
    background-color: #444444;
  }

  .control-button-v2 svg {
    width: 20px;
    height: 20px;
  }

  .controls-v2 {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
  }
    
  </style>


<div class="slider-container overflow-hidden relative">
    <div class="slider-wrapper-v2 flex flex-col">
    {PROJECTS.map((project) => (
      <div class="slider-card-v2 max-sm:w-10/12 w-11/12 p-4">
        <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
          <div class="w-full md:w-1/2">
            <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
              <img alt={project.title} class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={project.image} />
            </div>
          </div>

          <div class="w-full md:w-1/2 md:max-w-lg">
            <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
              {project.title}
            </h3>
            <div class="flex flex-wrap mt-2">
              <ul class="flex flex-row mb-2 gap-x-2">
                {project.tags.map((tag) => (
                  <li>
                    <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
                      <tag.icon class="size-4" />
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>

              <div class="mt-2 text-gray-700 dark:text-gray-400">{project.description}</div>
              <footer class="flex items-end justify-start mt-4 gap-x-4">
                {project.github && (
                  <LinkButton href={project.github}>
                    <GitHub class="size-6" />
                    Code
                  </LinkButton>
                )}
              </footer>
            </div>
          </div>
        </article>
      </div>
    ))}
    </div>
    <div class="controls-v2">
        <button class="prev-button-v2 control-button-v2">
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/10 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
              <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m5 15 7-7 7 7"/>
              </svg>
              
                <span class="sr-only">Previous</span>
            </span>
        </button>
        <div class="pagination-v2">
          <!-- Los botones de paginaci칩n se generar치n din치micamente -->
        </div>
        <button class="next-button-v2 control-button-v2">
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
              <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
              </svg>
              
                <span class="sr-only">Next</span>
            </span>        </button>
      </div>
    </div>
    <script>
      import { initializeSlider } from './js/sliderLogicV3.js';
    (function() {
      function updateSlider() {
        var value = 3;
        if (window.innerWidth < 640) {
          value = 2;
        }
        const sliderContainer = 'slider-vertical-v2';
        const nextButton = document.querySelector('.next-button-v2');
        const prevButton = document.querySelector('.prev-button-v2');
        const paginationContainer = document.querySelector('.pagination-v2');
        const sliderWrapper = document.querySelector('.slider-wrapper-v2');
        if (paginationContainer) {
          paginationContainer.innerHTML = '';
        }

        initializeSlider(nextButton, prevButton, paginationContainer, sliderWrapper, value, 2);
      }

      document.addEventListener('DOMContentLoaded', updateSlider);
      window.addEventListener('resize', updateSlider);
    })();
    </script>